" vundle setup
set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" add all your plugins here (note older versions of Vundle
" used Bundle instead of Plugin)
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-scripts/indentpython.vim'
" Bundle 'Valloric/YouCompleteMe'
" for syntax highlighting
Plugin 'vim-syntastic/syntastic'
" PEP 8 code checking
Plugin 'nvie/vim-flake8'
" for trees
Plugin 'scrooloose/nerdtree'
" git integration
Plugin 'tpope/vim-fugitive'
" powerline
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

Plugin 'kien/ctrlp.vim'
" ...

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

syntax on
filetype indent plugin on

" setting for youcompletme
" The first line ensures that the auto-complete window goes away when youâ€™re
" done with it, and the second defines a shortcut for goto definition.
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>


" for screen scpliting
set splitbelow
set splitright

" split navigations
" ctrl+j : move to the split below, and so on ...
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" some toggles
nnoremap <F5> :NERDTreeToggle<CR>

" Enable folding with the spacebar
nnoremap <space> za

" Use 4 spaces instead of tabs
set tabstop=4
set shiftwidth=4
set expandtab
set softtabstop=4
set autoindent

" colorscheme, (evening, desert, )
colorscheme evening
set background=dark
set term=xterm-256color
set t_Co=256
set termguicolors

" For python development
" Enable folding
set foldmethod=indent
set foldlevel=99

" PEP 8
au BufNewFile,BufRead *.py
    \ set tabstop=4
    \ softtabstop=4
    \ shiftwidth=4
    \ textwidth=88
    \ expandtab
    \ autoindent
    \ fileformat=unix

" define highlight group BadWhitespace
:highlight BadWhitespace ctermfg=16 ctermbg=253 guifg=#000000 guibg=#F8F8F0
" flag unnecessary whitespace
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" utf-8 support
set encoding=utf-8

"python with virtualenv support
"py << EOF
"import os
"import sys
"if 'VIRTUAL_ENV' in os.environ:
"    project_base_dir = os.environ['VIRTUAL_ENV']
"    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"    execfile(activate_this, dict(__file__=activate_this))
"EOF

" make code look pretty
let python_highlight_all=1
syntax on

" hide .pyc files
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

" line numbering
set nu

" access system clipboard
set clipboard=unnamed
